name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


# image should be built for arm64

jobs:

  build:

    runs-on: ubuntu-latest
    env:
      DOCKER_TARGET_PLATFORM: linux/arm/v7

    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag needle
    # - name: Save the Docker image
    #   run: docker save needle | gzip > needle.tar.gz
    - name: Install ssh keys
      run: | 
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.RASPBERRY_PI_IP }} > ~/.ssh/known_hosts
    - name: Deploy to server
      run: ssh -i ~/.ssh/id_rsa pi@${{ secrets.RASPBERRY_PI_IP }} "touch ~/test.txt"


    # - name: Upload a Build Artifact
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: needle.tar.gz
    #     path: needle.tar.gz

  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   env:
  #     DOCKER_TARGET_PLATFORM: linux/arm/v7
  #   steps:
  #     - name: Download a Build Artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: needle.tar.gz
  #         path: needle.tar.gz
  #     - name: Deploy project with SSH
  #       uses: easingthemes/ssh-deploy@v2.1.4
  #       env:
  #         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  #         REMOTE_HOST: ${{ secrets.RASPBERRY_PI_IP }}
  #         REMOTE_USER: pi
  #         SOURCE: "needle.tar.gz"
  #         TARGET: "~/needleImage"
  #     - name: Run the Docker image
  #       run: docker load < needle.tar.gz && docker run -d -p 8000:8000 needle -v /home/pi/needleImage:/usr/src/app/api/out/